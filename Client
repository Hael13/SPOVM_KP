#include "stdafx.h"
#include "Client.h"

Client::Client()
{
}

void Client::get_connection(char * ip)
{
}

void Client::disconnect()
{
	if (this->server == INVALID_SOCKET)
		return;
	char l_c_d = 'd';
	send(this->server, (char*)&l_c_d, sizeof(char), 0);
	closesocket(this->server);
}

void Client::recive_list()
{

	int i, size;
	char name[256];
	char l_c_d = 'l';

	send(this->server, (char*)&l_c_d, sizeof(char), 0);
	if (recv(this->server, (char*)&size, sizeof(int), 0) == 0)
		throw std::exception("Hub connection is missed");
	for (i = 0; i < size; i++)
	{
		if (recv(this->server, name, 256 * sizeof(char), 0) == 0)
			throw std::exception("Hub connection is missed");
		std::cout << i+1 << " " << name << std::endl;
	}
	getchar();
}

void Client::work()
{
	int act, index;
	bool fl = true;
	char name[256];
	while (fl)
	{
		this->help();
		std::cin >> act;
		std::getchar();
		try
		{
			switch (act)
			{
			case 1:
				this->recive_list();
				break;
			case 2:
				this->get();
				break;
			case 0:
				fl = false;
				this->disconnect();
				break;
			}
		}
		catch (UserException &ex)
		{
			std::cout << ex.what()<< std::endl;
			getchar();
		}
		catch (std::exception &ex)
		{
			std::cout << ex.what() << std::endl;
			fl = false;
			this->disconnect();
		}
	}
}

void Client::get()
{
}

void Client::help()
{
}

Client::~Client()
{
	closesocket(this->server);
}
